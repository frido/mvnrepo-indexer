package frido.mvnrepo.indexer;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.bson.Document;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App2 {

    static Logger log = LoggerFactory.getLogger(App2.class);
    
    public static void main(String[] args) {
        Database database = new MongoDatabase();
        ExecutorService executor = Executors.newFixedThreadPool(5);
        Client httpClient = new UrlClient(new JerseyHttpClient());
        List<Document> metadatas = toList(database.getAll("metadata").iterator());
        Consumer pomHandler = new PomHandler(database, executor, metadatas.size());
        Downloader downloader = new Downloader(executor, httpClient);
        for(Document doc : metadatas){
            String pomUrl = null;
			try {
                pomUrl = new Artifact(doc).getPomUrl();
            } catch (Exception e) {
                log.error("Artifact - PomUrl", e);
                pomHandler.error(e);
                continue;
			}
            downloader.start(pomUrl, pomHandler);
        }
    }

    public static List<Document> toList(Iterator<Document> iterator){
        List<Document> out = new LinkedList<>();
        while(iterator.hasNext()){
            out.add(iterator.next());
        }
        return out;
    }
}
